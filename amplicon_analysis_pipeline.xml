<tool id="amplicon_analysis_pipeline" name="Amplicon Analysis Pipeline" version="1.0.1">
  <description>analyse 16S rRNA data from Illumina Miseq paired-end reads</description>
  <requirements>
    <requirement type="package" version="1.0-patched">amplicon_analysis_pipeline</requirement>
    <requirement type="package" version="1.11">cutadapt</requirement>
    <requirement type="package" version="1.33">sickle</requirement>
    <requirement type="package" version="27-08-2013">bioawk</requirement>
    <requirement type="package" version="2.8.1">pandaseq</requirement>
    <requirement type="package" version="3.5.0">spades</requirement>
    <requirement type="package" version="0.11.3">fastqc</requirement>
    <requirement type="package" version="1.8.0">qiime</requirement>
    <requirement type="package" version="2.2.26">blast</requirement>
    <requirement type="package" version="0.2.4">fasta-splitter</requirement>
    <requirement type="package" version="2.2">rdp-classifier</requirement>
    <requirement type="package" version="3.2.0">R</requirement>
    <requirement type="package" version="1.1.3">vsearch</requirement>
    <requirement type="package" version="2010-04-29">microbiomeutil</requirement>
    <requirement type="package">fasta_number</requirement>
  </requirements>
  <stdio>
    <exit_code range="1:" />
  </stdio>
  <command><![CDATA[
  ## Set the reference database name
  #if $reference_database == ""
    #set reference_database_name = "gg"
  #else
    #set reference_database_name = "silva"
  #end if

  ## Create links to input FASTQs and Final_names.txt file
  ## NB file names must have .fastq extension and contain
  ## "_R1_" or "_R2_"
  #if str($input_type.pairs_or_collection) == "collection"
    #for $fq_pair in $input_type.fastq_collection
      ln -s "${fq_pair.forward}" "${fq_pair.name}_R1_.fastq" &&
      ln -s "${fq_pair.reverse}" "${fq_pair.name}_R2_.fastq" &&
      echo ${fq_pair.name}_R1_.fastq\$'\t'"${fq_pair.name}" >> Final_name.txt &&
      echo ${fq_pair.name}_R2_.fastq\$'\t'"${fq_pair.name}" >> Final_name.txt &&
    #end for
  #else
    #for $fq_pair in $input_type.fastq_pairs
      ln -s "${fq_pair.fastq_r1}" "${fq_pair.name}_R1_.fastq" &&
      ln -s "${fq_pair.fastq_r2}" "${fq_pair.name}_R2_.fastq" &&
      echo ${fq_pair.name}_R1_.fastq\$'\t'"${fq_pair.name}" >> Final_name.txt &&
      echo ${fq_pair.name}_R2_.fastq\$'\t'"${fq_pair.name}" >> Final_name.txt &&
    #end for
  #end if

  ## Make links to Categories.txt and Metatable.txt
  ln -s "${categories_file_in}" Categories.txt &&
  ln -s "${metatable_file_in}" Metatable.txt &&

  ## Run the amplicon analysis pipeline script
  Amplicon_analysis_pipeline.sh
  -g "$forward_pcr_primer"
  -G "$reverse_pcr_primer"
  #if str( $trimming_threshold ) != ""
  -q $trimming_threshold
  #end if
  #if str( $minimum_overlap ) != ""
  -O $minimum_overlap
  #end if
  #if str( $minimum_length ) != ""
  -L $minimum_length
  #end if
  -P $pipeline
  -r \$AMPLICON_ANALYSIS_REF_DATA_PATH
  $reference_database
  &&

  ## Collect outputs
  cp Final_name.txt "${final_name_file}" &&
  cp Metatable_log/Metatable_corrected.txt "${metatable_corrected}" &&
  cp ${pipeline}_OTU_tables/multiplexed_linearized_dereplicated_mc2_repset_nonchimeras_tax_OTU_table.biom "${tax_otu_table_biom_file}" &&
  cp ${pipeline}_OTU_tables/otus.tre "${otus_tre_file}" &&
  cp RESULTS/${pipeline}_${reference_database_name}/OTUs_count.txt "${otus_count_file}" &&
  cp RESULTS/${pipeline}_${reference_database_name}/table_summary.txt "${table_summary_file}" &&

  ## HTML outputs

  ## OTU table
  mkdir $heatmap_otu_table_html.files_path &&
  cp -r RESULTS/${pipeline}_${reference_database_name}/Heatmap/js $heatmap_otu_table_html.files_path &&
  cp RESULTS/${pipeline}_${reference_database_name}/Heatmap/otu_table.html "${heatmap_otu_table_html}" &&

  ## Phylum genus barcharts
  mkdir $phylum_genus_dist_barcharts_html.files_path &&
  cp -r RESULTS/${pipeline}_${reference_database_name}/phylum_genus_charts/charts $phylum_genus_dist_barcharts_html.files_path &&
  cp -r RESULTS/${pipeline}_${reference_database_name}/phylum_genus_charts/raw_data $phylum_genus_dist_barcharts_html.files_path &&
  cp RESULTS/${pipeline}_${reference_database_name}/phylum_genus_charts/bar_charts.html "${phylum_genus_dist_barcharts_html}" &&

  ## Beta diversity weighted 2d plots
  mkdir $beta_div_even_weighted_2d_plots.files_path &&
  cp -r RESULTS/${pipeline}_${reference_database_name}/beta_div_even/weighted_2d_plot/* $beta_div_even_weighted_2d_plots.files_path &&
  cp RESULTS/${pipeline}_${reference_database_name}/beta_div_even/weighted_2d_plot/weighted_unifrac_pc_2D_PCoA_plots.html "${beta_div_even_weighted_2d_plots}" &&

  ## Beta diversity unweighted 2d plots
  mkdir $beta_div_even_unweighted_2d_plots.files_path &&
  cp -r RESULTS/${pipeline}_${reference_database_name}/beta_div_even/unweighted_2d_plot/* $beta_div_even_unweighted_2d_plots.files_path &&
  cp RESULTS/${pipeline}_${reference_database_name}/beta_div_even/unweighted_2d_plot/unweighted_unifrac_pc_2D_PCoA_plots.html "${beta_div_even_unweighted_2d_plots}"
  ]]></command>
  <inputs>
    <param type="data" name="metatable_file_in" format="tabular"
	   label="Input Metatable.txt file" />
    <param type="data" name="categories_file_in" format="tabular"
	   label="Input Categories.txt file" />
    <conditional name="input_type">
      <param name="pairs_or_collection" type="select"
	     label="Input FASTQ type">
	<option value="pairs_of_files" selected="true">Pairs of datasets</option>
	<option value="collection">Dataset pairs in a collection</option>
      </param>
      <when value="collection">
	<param name="fastq_collection" type="data_collection"
	       format="fastqsanger" collection_type="list:paired"/>
      </when>
      <when value="pairs_of_files">
	<repeat name="fastq_pairs" title="Input fastq pairs" min="1">
	  <param type="text" name="name" value=""
		 label="Final name for FASTQ pair" />
	  <param type="data" name="fastq_r1" format="fastqsanger"
		 label="FASTQ with forward reads (R1)" />
	  <param type="data" name="fastq_r2" format="fastqsanger"
		 label="FASTQ with reverse reads (R2)" />
	</repeat>
      </when>
    </conditional>
    <param type="text" name="forward_pcr_primer" value=""
	   label="Forward PCR primer sequence"
	   help="Must not include barcode or adapter sequence (-g)" />
    <param type="text" name="reverse_pcr_primer" value=""
	   label="Reverse PCR primer sequence"
	   help="Must not include barcode or adapter sequence (-G)" />
    <param type="integer" name="trimming_threshold" value="20"
	   label="Threshold quality below which read will be trimmed"
	   help="Phred score; default is 20 (-q)" />
    <param type="integer" name="minimum_overlap" value="10"
	   label="Minimum overlap in bp between forward and reverse reads"
	   help="Default is 10 (-O)" />
    <param type="integer" name="minimum_length" value="380"
	   label="Minimum length in bp to keep sequence after overlapping"
	   help="Default is 380 (-L)" />
    <param type="select" name="pipeline"
	    label="Pipeline to use for analysis">
      <option value="Vsearch" selected="true" >Vsearch</option>
      <option value="QIIME">QIIME</option>
      <option value="Uparse">Uparse</option>
    </param>
    <param type="select" name="reference_database"
	   label="Reference database">
      <option value="" selected="true">GreenGenes</option>
      <option value="-S">Silva</option>
    </param>
  </inputs>
  <outputs>
    <data format="tabular" name="final_name_file"
	  label="${tool.name}: Final_name.txt" />
    <data format="tabular" name="metatable_corrected"
	  label="${tool.name}: Metatable_corrected.txt" />
    <data format="biom" name="tax_otu_table_biom_file"
	  label="${tool.name}: ${pipeline} tax OTU table (biom format)" />
    <data format="tabular" name="otus_tre_file"
	  label="${tool.name}: ${pipeline} otus.tre" />
    <data format="html" name="phylum_genus_dist_barcharts_html"
	  label="${tool.name}: ${pipeline} phylum_genus_dist barcharts HTML" />
    <data format="tabular" name="otus_count_file"
	  label="${tool.name}: ${pipeline} OTUs count file" />
    <data format="tabular" name="table_summary_file"
	  label="${tool.name}: ${pipeline} table summary file" />
    <data format="html" name="heatmap_otu_table_html"
	  label="${tool.name}: ${pipeline} heatmap OTU table HTML" />
    <data format="html" name="beta_div_even_weighted_2d_plots"
	  label="${tool.name}: ${pipeline} beta diversity weighted 2D plots HTML" />
    <data format="html" name="beta_div_even_unweighted_2d_plots"
	  label="${tool.name}: ${pipeline} beta diversity unweighted 2D plots HTML" />
  </outputs>
  <tests>
  </tests>
  <help><![CDATA[
.. class:: infomark

**What it does**

This pipeline has been designed for the analysis of 16S rRNA data from
Illumina Miseq (Casava >= 1.8) paired-end reads.
  
.. class:: infomark

**Usage**

The pipeline isdivided in 3 steps:

 * 1. Quality control with Cutadapt to check for and trim PCR primers,
   Sickle for quality trimming, SPADes for illumina Miseq error
   correction and Pandaseq to merge paired-end reads
 * 2.1 QIIME pipeline to remove singletons and chimeras and build otu
   table and phylogenetic tree
 * 2.2 UPARSE pipeline to remove singletons and chimeras and build otu
   table and phylogenetic tree
 * 2.3 Vsearch pipeline. A freely available programme almost identical
   to Uparse but not limited to 4GB RAM
 * 3. QIIME to perform beta and alpha diversity analysis

**Authors**

Pipeline author: Mauro Tutino

Galaxy tool: Peter Briggs

	]]></help>
  <citations>
  </citations>
</tool>
